//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BaibakovLanguage
{
    using BaibakovLanguage.Properties;
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Client
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Client()
        {
            this.ClientService = new HashSet<ClientService>();
            this.Tag = new HashSet<Tag>();
        }
    
        public int ID { get; set; }
        public string LastName { get; set; }
        public string FirstName { get; set; }
        public string Patronymic { get; set; }
        public string ClientNamesMerge
        {
            get
            {
                return this.LastName + " " + this.FirstName + " " + this.Patronymic;
            }
        }
        public string GenderCode { get; set; }

        public string GenderExtended
        {
            get
            {
                return this.Gender.Name;
            }
        }
        public string Phone { get; set; }
        public string PhotoPath { get; set; }
        public string PhotoString
        {
            get
            {
                if (PhotoPath != null)
                    return "./Resources/Clients/" + this.PhotoPath;

                return null;
            }
        }
        public Nullable<System.DateTime> Birthday { get; set; }
        public string BirthdayString
        {
            get
            {
                DateTime result;

                if (DateTime.TryParse(this.Birthday.ToString(), out result))
                {
                    return result.ToShortDateString();
                } else
                {
                    return "не указано";
                }
            }
        }

        public string Email { get; set; }
        public System.DateTime RegistrationDate { get; set; }
        public string RegistrationDateString
        {
            get
            {
                if (this.RegistrationDate != null)
                {
                    return RegistrationDate.ToShortDateString();
                }

                return "";
            }
        }


        public virtual Gender Gender { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClientService> ClientService { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Tag> Tag { get; set; }

        public string lastJoin
        {
            get
            {
                var lastJoinItem = Baibakov_languageEntities.GetContext().ClientService.Where(p => (p.ClientID == this.ID));

                if (lastJoinItem.Count() != 0)
                {
                    return lastJoinItem.Distinct().First().StartTime.ToShortDateString();
                } else
                {
                    return "нету";
                }
            }
        }

        public int countOfJoins
        {
            get
            {
                try
                {
                    var lastJoinItem = Baibakov_languageEntities.GetContext().ClientService.Where(p => (p.ClientID == this.ID)).ToList();

                    return lastJoinItem.Count();
                }
                catch
                {
                    return 0;
                }
            }
        }
    }
}
